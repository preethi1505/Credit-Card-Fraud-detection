import pandas as pd
import numpy as np

# Set a seed for reproducibility
np.random.seed(42)

# Number of samples
n_samples = 1000

# Generate synthetic data
data = {
    'TransactionID': range(1, n_samples + 1),
    'Amount': np.random.normal(loc=100, scale=50, size=n_samples),
    'TransactionHour': np.random.randint(0, 24, size=n_samples),
    'MerchantCategory': np.random.choice(['Electronics', 'Grocery', 'Fashion', 'Restaurant', 'Online'], size=n_samples),
    'UserActivityLevel': np.random.choice(['Low', 'Medium', 'High'], size=n_samples, p=[0.6, 0.3, 0.1]),
    'TimeSinceLastTransaction': np.random.uniform(0, 100, size=n_samples), # In hours
    'LocationRiskScore': np.random.uniform(0, 1, size=n_samples),
    'IsFraud': np.random.choice([0, 1], size=n_samples, p=[0.95, 0.05]) # 5% fraud rate
}

df = pd.DataFrame(data)

# Introduce some patterns for fraud (very simplistic)
df.loc[(df['Amount'] > 300) & (df['TransactionHour'] < 6), 'IsFraud'] = 1
df.loc[(df['MerchantCategory'] == 'Online') & (df['UserActivityLevel'] == 'Low'), 'IsFraud'] = 1
df.loc[(df['TimeSinceLastTransaction'] > 80) & (df['LocationRiskScore'] > 0.8), 'IsFraud'] = 1

# Ensure IsFraud remains binary
df['IsFraud'] = df['IsFraud'].clip(0, 1).astype(int)

print("Sample of the dataset:")
print(df.head())
print("\nFraud distribution:")
print(df['IsFraud'].value_counts(normalize=True))
